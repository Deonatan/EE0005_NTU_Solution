{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import seaborn as sb \n",
    "import matplotlib.pyplot as plt "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problem 1 (Data Preparation)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### a) Importing Train.csv"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>MSSubClass</th>\n",
       "      <th>MSZoning</th>\n",
       "      <th>LotFrontage</th>\n",
       "      <th>LotArea</th>\n",
       "      <th>Street</th>\n",
       "      <th>Alley</th>\n",
       "      <th>LotShape</th>\n",
       "      <th>LandContour</th>\n",
       "      <th>Utilities</th>\n",
       "      <th>...</th>\n",
       "      <th>PoolArea</th>\n",
       "      <th>PoolQC</th>\n",
       "      <th>Fence</th>\n",
       "      <th>MiscFeature</th>\n",
       "      <th>MiscVal</th>\n",
       "      <th>MoSold</th>\n",
       "      <th>YrSold</th>\n",
       "      <th>SaleType</th>\n",
       "      <th>SaleCondition</th>\n",
       "      <th>SalePrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>65.0</td>\n",
       "      <td>8450</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Reg</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>208500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>RL</td>\n",
       "      <td>80.0</td>\n",
       "      <td>9600</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Reg</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2007</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>181500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>68.0</td>\n",
       "      <td>11250</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>223500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>70</td>\n",
       "      <td>RL</td>\n",
       "      <td>60.0</td>\n",
       "      <td>9550</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2006</td>\n",
       "      <td>WD</td>\n",
       "      <td>Abnorml</td>\n",
       "      <td>140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>60</td>\n",
       "      <td>RL</td>\n",
       "      <td>84.0</td>\n",
       "      <td>14260</td>\n",
       "      <td>Pave</td>\n",
       "      <td>NaN</td>\n",
       "      <td>IR1</td>\n",
       "      <td>Lvl</td>\n",
       "      <td>AllPub</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2008</td>\n",
       "      <td>WD</td>\n",
       "      <td>Normal</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 81 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id  MSSubClass MSZoning  LotFrontage  LotArea Street Alley LotShape  \\\n",
       "0   1          60       RL         65.0     8450   Pave   NaN      Reg   \n",
       "1   2          20       RL         80.0     9600   Pave   NaN      Reg   \n",
       "2   3          60       RL         68.0    11250   Pave   NaN      IR1   \n",
       "3   4          70       RL         60.0     9550   Pave   NaN      IR1   \n",
       "4   5          60       RL         84.0    14260   Pave   NaN      IR1   \n",
       "\n",
       "  LandContour Utilities  ... PoolArea PoolQC Fence MiscFeature MiscVal MoSold  \\\n",
       "0         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n",
       "1         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      5   \n",
       "2         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      9   \n",
       "3         Lvl    AllPub  ...        0    NaN   NaN         NaN       0      2   \n",
       "4         Lvl    AllPub  ...        0    NaN   NaN         NaN       0     12   \n",
       "\n",
       "  YrSold  SaleType  SaleCondition  SalePrice  \n",
       "0   2008        WD         Normal     208500  \n",
       "1   2007        WD         Normal     181500  \n",
       "2   2008        WD         Normal     223500  \n",
       "3   2006        WD        Abnorml     140000  \n",
       "4   2008        WD         Normal     250000  \n",
       "\n",
       "[5 rows x 81 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "house_data = pd.read_csv('train.csv')\n",
    "house_data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### b) checking dtypes in datas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Id                 int64\n",
      "MSSubClass         int64\n",
      "MSZoning          object\n",
      "LotFrontage      float64\n",
      "LotArea            int64\n",
      "                  ...   \n",
      "MoSold             int64\n",
      "YrSold             int64\n",
      "SaleType          object\n",
      "SaleCondition     object\n",
      "SalePrice          int64\n",
      "Length: 81, dtype: object\n"
     ]
    }
   ],
   "source": [
    "print(house_data.dtypes)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### c) Extract only int64 type"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Id</th>\n",
       "      <th>MSSubClass</th>\n",
       "      <th>LotArea</th>\n",
       "      <th>OverallQual</th>\n",
       "      <th>OverallCond</th>\n",
       "      <th>YearBuilt</th>\n",
       "      <th>YearRemodAdd</th>\n",
       "      <th>BsmtFinSF1</th>\n",
       "      <th>BsmtFinSF2</th>\n",
       "      <th>BsmtUnfSF</th>\n",
       "      <th>...</th>\n",
       "      <th>WoodDeckSF</th>\n",
       "      <th>OpenPorchSF</th>\n",
       "      <th>EnclosedPorch</th>\n",
       "      <th>3SsnPorch</th>\n",
       "      <th>ScreenPorch</th>\n",
       "      <th>PoolArea</th>\n",
       "      <th>MiscVal</th>\n",
       "      <th>MoSold</th>\n",
       "      <th>YrSold</th>\n",
       "      <th>SalePrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>60</td>\n",
       "      <td>8450</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2003</td>\n",
       "      <td>2003</td>\n",
       "      <td>706</td>\n",
       "      <td>0</td>\n",
       "      <td>150</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>61</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2008</td>\n",
       "      <td>208500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>9600</td>\n",
       "      <td>6</td>\n",
       "      <td>8</td>\n",
       "      <td>1976</td>\n",
       "      <td>1976</td>\n",
       "      <td>978</td>\n",
       "      <td>0</td>\n",
       "      <td>284</td>\n",
       "      <td>...</td>\n",
       "      <td>298</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>2007</td>\n",
       "      <td>181500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>60</td>\n",
       "      <td>11250</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>2001</td>\n",
       "      <td>2002</td>\n",
       "      <td>486</td>\n",
       "      <td>0</td>\n",
       "      <td>434</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>42</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>2008</td>\n",
       "      <td>223500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>70</td>\n",
       "      <td>9550</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>1915</td>\n",
       "      <td>1970</td>\n",
       "      <td>216</td>\n",
       "      <td>0</td>\n",
       "      <td>540</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>35</td>\n",
       "      <td>272</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2006</td>\n",
       "      <td>140000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>60</td>\n",
       "      <td>14260</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>2000</td>\n",
       "      <td>2000</td>\n",
       "      <td>655</td>\n",
       "      <td>0</td>\n",
       "      <td>490</td>\n",
       "      <td>...</td>\n",
       "      <td>192</td>\n",
       "      <td>84</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2008</td>\n",
       "      <td>250000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "   Id  MSSubClass  LotArea  OverallQual  OverallCond  YearBuilt  YearRemodAdd  \\\n",
       "0   1          60     8450            7            5       2003          2003   \n",
       "1   2          20     9600            6            8       1976          1976   \n",
       "2   3          60    11250            7            5       2001          2002   \n",
       "3   4          70     9550            7            5       1915          1970   \n",
       "4   5          60    14260            8            5       2000          2000   \n",
       "\n",
       "   BsmtFinSF1  BsmtFinSF2  BsmtUnfSF  ...  WoodDeckSF  OpenPorchSF  \\\n",
       "0         706           0        150  ...           0           61   \n",
       "1         978           0        284  ...         298            0   \n",
       "2         486           0        434  ...           0           42   \n",
       "3         216           0        540  ...           0           35   \n",
       "4         655           0        490  ...         192           84   \n",
       "\n",
       "   EnclosedPorch  3SsnPorch  ScreenPorch  PoolArea  MiscVal  MoSold  YrSold  \\\n",
       "0              0          0            0         0        0       2    2008   \n",
       "1              0          0            0         0        0       5    2007   \n",
       "2              0          0            0         0        0       9    2008   \n",
       "3            272          0            0         0        0       2    2006   \n",
       "4              0          0            0         0        0      12    2008   \n",
       "\n",
       "   SalePrice  \n",
       "0     208500  \n",
       "1     181500  \n",
       "2     223500  \n",
       "3     140000  \n",
       "4     250000  \n",
       "\n",
       "[5 rows x 35 columns]"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "int_house_data = house_data.loc[:, house_data.dtypes == np.int64]\n",
    "int_house_data.head()\n",
    "#int_house_data.dtypes"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Problem 2 (Statistical Summary)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### a) Find Summary Stats of the SalePrice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "SalePrice = pd.DataFrame(int_house_data['SalePrice'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SalePrice</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1460.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>180921.195890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>79442.502883</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>34900.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>129975.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>163000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>214000.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>755000.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           SalePrice\n",
       "count    1460.000000\n",
       "mean   180921.195890\n",
       "std     79442.502883\n",
       "min     34900.000000\n",
       "25%    129975.000000\n",
       "50%    163000.000000\n",
       "75%    214000.000000\n",
       "max    755000.000000"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SalePrice.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### b) visualizing data of SalePrice"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Box-Plot Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1,1,figsize = (24,4))\n",
    "sb.boxplot(data=SalePrice , orient = 'h')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Historgram Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `histplot` (an axes-level function for histograms).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1, 1, figsize=(24, 12))\n",
    "sb.distplot(SalePrice, kde = False, color = \"green\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Density'>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1, 1, figsize=(24, 12))\n",
    "sb.distplot(SalePrice, hist = False, color = \"blue\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### c) Summary Stats of Lot Area"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LotArea</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>8450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>9600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>11250</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9550</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>14260</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   LotArea\n",
       "0     8450\n",
       "1     9600\n",
       "2    11250\n",
       "3     9550\n",
       "4    14260"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LotArea = pd.DataFrame(int_house_data['LotArea'])\n",
    "LotArea.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LotArea</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1460.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>10516.828082</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>9981.264932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>1300.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>7553.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>9478.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>11601.500000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>215245.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             LotArea\n",
       "count    1460.000000\n",
       "mean    10516.828082\n",
       "std      9981.264932\n",
       "min      1300.000000\n",
       "25%      7553.500000\n",
       "50%      9478.500000\n",
       "75%     11601.500000\n",
       "max    215245.000000"
      ]
     },
     "execution_count": 37,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "LotArea.describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### d) Visualzing data of LotArea"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Box-Plot Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 1728x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1,1,figsize = (24,4))\n",
    "sb.boxplot(data=LotArea , orient = 'h')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### HIstorgram Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1, 1, figsize=(24, 12))\n",
    "sb.distplot(LotArea, kde = False, color = \"purple\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### KDE Visualization"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Dell\\anaconda3\\lib\\site-packages\\seaborn\\distributions.py:2551: FutureWarning: `distplot` is a deprecated function and will be removed in a future version. Please adapt your code to use either `displot` (a figure-level function with similar flexibility) or `kdeplot` (an axes-level function for kernel density plots).\n",
      "  warnings.warn(msg, FutureWarning)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:ylabel='Density'>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1728x864 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "f, axes = plt.subplots(1, 1, figsize=(24, 12))\n",
    "sb.distplot(SalePrice, hist = False, color = \"red\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### e) Joining Plot of AreaLot and SalePrice"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<seaborn.axisgrid.JointGrid at 0x1b173a8f580>"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x576 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.jointplot(data = int_house_data, x = \"LotArea\" , y = \"SalePrice\", height = 8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Checking the Correlation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>SalePrice</th>\n",
       "      <th>LotArea</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>SalePrice</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.263843</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LotArea</th>\n",
       "      <td>0.263843</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           SalePrice   LotArea\n",
       "SalePrice   1.000000  0.263843\n",
       "LotArea     0.263843  1.000000"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "jointDF = pd.concat([SalePrice, LotArea.reindex(index=SalePrice.index)], sort = False, axis = 1)\n",
    "\n",
    "jointDF.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sb.heatmap(jointDF.corr(), vmin = -1, vmax = 1, annot = True, fmt=\".2f\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
